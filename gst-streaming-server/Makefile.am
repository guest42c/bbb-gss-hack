
lib_LTLIBRARIES = libgss-@GST_API_VERSION@.la
if ENABLE_STATIC_LIB
noinst_LTLIBRARIES = libgss.la
endif

BUILT_SOURCES = gss-content.c gss-content.h
CLEANFILES = gss-content.c gss-content.h

gss_includedir = $(includedir)/gstreamer-@GST_API_VERSION@/gss

libgss_@GST_API_VERSION@_la_CFLAGS = \
	$(GSS_CFLAGS) \
	$(GST_CFLAGS) \
	$(SOUP_CFLAGS) \
	$(GST_RTSP_SERVER_CFLAGS) \
	$(JSON_GLIB_CFLAGS)
libgss_@GST_API_VERSION@_la_LIBADD = \
	$(GST_RTSP_SERVER_LIBS) \
	$(GST_LIBS) \
	$(SOUP_LIBS) \
	$(JSON_GLIB_LIBS)
libgss_@GST_API_VERSION@_la_LDFLAGS = \
	-version-info $(GSS_LIBVERSION) \
	-no-undefined -export-symbols-regex 'gss_'
libgss_@GST_API_VERSION@_la_SOURCES = \
	$(sources)

sources = \
	gss-hls-server.c \
	gss-server.c \
	gss-session.c \
	gss-config.c \
	gss-html.c \
	gss-soup.c \
	gss-metrics.c \
	gss-content.c \
	gss-content.h \
	gss-vod.c \
	gss-manager.c \
	gss-resource.c \
	gss-object.c \
	gss-program.c \
	gss-pull.c \
	gss-push.c \
	gss-stream.c \
	gss-transaction.c \
	gss-user.c \
	gss-utils.c \
	gss-websocket.c

if ENABLE_RTSP
sources += \
	gss-rtsp.c
endif

libgss_la_CFLAGS = \
	$(GSS_CFLAGS) \
	$(GST_CFLAGS) \
	$(SOUP_CFLAGS) \
	$(GST_RTSP_SERVER_CFLAGS) \
	$(JSON_GLIB_CFLAGS)
libgss_la_LIBS = \
	$(GST_RTSP_SERVER_LIBS) \
	$(GST_LIBS) \
	$(SOUP_LIBS) \
	$(JSON_GLIB_LIBS)
libgss_la_SOURCES = $(sources)

gss_include_HEADERS = \
	gss-server.h \
	gss-session.h \
	gss-config.h \
	gss-html.h \
	gss-soup.h \
	gss-rtsp.h \
	gss-metrics.h \
	gss-manager.h \
	gss-object.h \
	gss-program.h \
	gss-pull.h \
	gss-push.h \
	gss-resource.h \
	gss-stream.h \
	gss-transaction.h \
	gss-types.h \
	gss-user.h \
	gss-utils.h \
	gss-vod.h \
	gss-websocket.h

content_files= \
	content/bootstrap-responsive.css \
	content/bootstrap.css \
	content/bootstrap.js \
	content/footer-entropywave.png \
	content/glyphicons-halflings-white.png \
	content/glyphicons-halflings.png \
	content/include.js \
	content/jquery.js \
	content/offline.png \
	content/no-snapshot.png \
	content/sign_in_blue.png

EXTRA_DIST = $(content_files)

gss-content.c: $(content_files) Makefile
	echo '/* Autogenerated, do not edit */' >$@
	for each in $(content_files) ; do \
	  sym=`echo $$each | sed -e 's/content.//' -e 's/[-.]/_/g'`; \
	  echo "const int gss_data_$${sym}_len =" `wc -c <$(srcdir)/$$each` ";" >>$@; \
	  echo "const char gss_data_$${sym}[] = {" >>$@; \
	  hexdump -v -e '"  " 12/1 "0x%02x, " "\n"' $(srcdir)/$$each | \
	    sed 's/ 0x  ,//g' >>$@; \
	  echo '  0x00 };' >>$@; \
	done

gss-content.h: $(content_files) Makefile
	echo '/* Autogenerated, do not edit */' >$@
	for each in $(content_files) ; do \
	  sym=`echo $$each | sed -e 's/content.//' -e 's/[-.]/_/g'`; \
	  echo "#define gss_data_$${sym}_len " `wc -c <$(srcdir)/$$each` >>$@; \
	  echo "extern const char gss_data_$${sym}[];" >>$@; \
	done



